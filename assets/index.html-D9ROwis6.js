import{_ as e,c as t,f as r,o as s}from"./app-1Weo8reD.js";const n={};function i(d,o){return s(),t("div",null,o[0]||(o[0]=[r('<h2 id="nodejs-底层实现" tabindex="-1"><a class="header-anchor" href="#nodejs-底层实现"><span>NodeJS 底层实现</span></a></h2><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时，允许开发者在服务器端运行 JavaScript。它的底层实现和与浏览器中的 JavaScript 有一些显著的不同之处。以下是对 Node.js 底层实现的简介，以及它与 JavaScript 和浏览器的不同之处的概述。</p><h3 id="node-js-的底层实现" tabindex="-1"><a class="header-anchor" href="#node-js-的底层实现"><span>Node.js 的底层实现</span></a></h3><ol><li><p><strong>V8 引擎</strong>: Node.js 使用 Google 的 V8 JavaScript 引擎来执行 JavaScript 代码。V8 将 JavaScript 编译为机器码，从而提高执行速度。</p></li><li><p><strong>事件驱动和非阻塞 I/O</strong>: Node.js 采用事件驱动架构，使用异步 I/O 操作。这意味着 Node.js 可以处理大量并发连接，而不会因为等待 I/O 操作（如文件读取、网络请求等）而阻塞主线程。它使用事件循环（Event Loop）来管理异步操作。</p></li><li><p><strong>libuv</strong>: Node.js 使用 libuv 库来处理异步 I/O 操作。libuv 提供了跨平台的异步 I/O 功能，包括文件系统操作、网络操作和进程管理等。它封装了不同操作系统的底层 I/O 操作，使得 Node.js 可以在不同平台上运行。</p></li><li><p><strong>模块系统</strong>: Node.js 使用 CommonJS 模块系统，允许开发者将代码分割成多个模块，并通过 <code>require</code> 和 <code>module.exports</code> 进行导入和导出。这种模块化设计使得代码更易于维护和重用。</p></li><li><p><strong>包管理</strong>: Node.js 生态系统中有一个强大的包管理工具 npm（Node Package Manager），允许开发者轻松地安装、共享和管理第三方库和工具。</p></li></ol><h3 id="node-js-与-javascript-和浏览器的不同" tabindex="-1"><a class="header-anchor" href="#node-js-与-javascript-和浏览器的不同"><span>Node.js 与 JavaScript 和浏览器的不同</span></a></h3><ol><li><p><strong>运行环境</strong>:</p><ul><li><strong>Node.js</strong>: 运行在服务器端，提供了文件系统、网络、进程等操作的能力，适合构建后端应用。</li><li><strong>浏览器</strong>: 运行在客户端，主要用于处理用户界面和与用户交互，提供了 DOM 操作、事件处理等功能。</li></ul></li><li><p><strong>API 和全局对象</strong>:</p><ul><li><strong>Node.js</strong>: 提供了许多服务器端特有的 API，如 <code>fs</code>（文件系统）、<code>http</code>（HTTP 服务器）、<code>path</code>（路径处理）等。全局对象包括 <code>global</code>、<code>process</code>、<code>Buffer</code> 等。</li><li><strong>浏览器</strong>: 提供了与用户界面相关的 API，如 <code>document</code>、<code>window</code>、<code>localStorage</code> 等。全局对象是 <code>window</code>。</li></ul></li><li><p><strong>模块系统</strong>:</p><ul><li><strong>Node.js</strong>: 使用 CommonJS 模块系统，支持 <code>require</code> 和 <code>module.exports</code>。</li><li><strong>浏览器</strong>: 传统上使用 <code>&lt;script&gt;</code> 标签引入 JavaScript 文件，但现代浏览器支持 ES6 模块（使用 <code>import</code> 和 <code>export</code>）。</li></ul></li><li><p><strong>异步编程</strong>:</p><ul><li><strong>Node.js</strong>: 采用事件驱动和非阻塞 I/O，使用回调、Promise 和 async/await 处理异步操作。</li><li><strong>浏览器</strong>: 也支持异步编程，但通常与用户交互（如事件处理）密切相关。</li></ul></li><li><p><strong>性能和资源管理</strong>:</p><ul><li><strong>Node.js</strong>: 适合处理高并发的网络请求，能够有效利用服务器资源。</li><li><strong>浏览器</strong>: 主要关注用户体验，处理用户输入和界面更新。</li></ul></li></ol><p><a href="/Node.js/htyvd93s/" target="_blank" rel="noopener noreferrer">Node.js底层实现 - 简单了解 </a></p>',7)]))}const a=e(n,[["render",i],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/InterView/ozuld3uv/","title":"面试记录 - NodeJS部分","lang":"zh-CN","frontmatter":{"title":"面试记录 - NodeJS部分","createTime":"2025/01/13 09:37:26","permalink":"/InterView/ozuld3uv/"},"headers":[],"readingTime":{"minutes":2.49,"words":746},"git":{"updatedTime":1736739403000,"contributors":[{"name":"Yevin Yu","email":"yuwb0521@outlook.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Yevin Yu?v=4","url":"https://github.com/Yevin Yu"}]},"filePathRelative":"notes/InterView/NodeJS.md","bulletin":false}');export{a as comp,c as data};
